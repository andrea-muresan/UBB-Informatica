     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  segment data use32 class=data
    12 00000000 61416242322578              s db 'a', 'A', 'b', 'B', '2', '%', 'x'
    13                                      len equ $-s
    14 00000007 00<rept>                    d times len db 0
    15                                  
    16                                  ; Se da un sir de caractere S. Sa se construiasca sirul D care sa contina toate literele mici din sirul S.
    17                                  segment code use32 class=code
    18                                      start:
    19                                          
    20 00000000 B907000000                      mov ecx, len
    21 00000005 E322                            jecxz final
    22                                          
    23 00000007 BE00000000                      mov esi, 0 ; contorul pentru sirul dat
    24 0000000C BF00000000                      mov edi, 0 ; contorul pentru sirul pe care il cream
    25                                          
    26                                          repeta:
    27 00000011 8A86[00000000]                      mov al, [s + esi]
    28 00000017 3C61                                cmp al, 'a'
    29 00000019 7C0B                                jl gata
    30                                              
    31 0000001B 3C7A                                cmp al, 'z'
    32 0000001D 7F07                                jg gata
    33                                              
    34 0000001F 8887[07000000]                      mov [d + edi], al
    35 00000025 47                                  inc edi
    36                                              
    37                                              gata:
    38 00000026 46                                      inc esi
    39                                          
    40 00000027 E2E8                            loop repeta
    41                                          
    42                                          
    43                                          final:
    44                                          ; exit(0)
    45 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
