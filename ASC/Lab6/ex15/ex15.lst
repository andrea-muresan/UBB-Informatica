     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 07563412153C2B1A            s DD 12345607h, 1A2B3C15h
    17                                      len equ $-s
    18 00000008 00<rept>                    d times len db 0
    19                                      
    20 00000010 25642000                    format db "%d ", 0
    21                                  
    22                                  ; Se da un sir S de dublucuvinte.
    23                                  ; Sa se obtina sirul D format din octetii dublucuvintelor din sirul D sortati in ordine descrescatoare in interpretarea fara semn.
    24                                  segment code use32 class=code
    25                                      start:
    26                                          
    27 00000000 B908000000                      mov ecx , len
    28 00000005 E30E                            jecxz final
    29                                          
    30 00000007 BE[00000000]                    mov esi, s
    31 0000000C BF[08000000]                    mov edi, d
    32 00000011 FC                              cld
    33                                          
    34                                          repeta:
    35 00000012 A4                                  movsb
    36 00000013 E2FD                            loop repeta
    37                                          
    38                                          
    39                                          
    40                                          final:
    41                                          ; exit(0)
    42 00000015 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 00000017 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
