     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 07563412153C2B1A            s DD 12345607h, 1A2B3C15h
    14                                      len equ $-s
    15 00000008 00<rept>                    d times len db 0
    16                                  
    17                                  ; Se da un sir S de dublucuvinte.
    18                                  ; Sa se obtina sirul D format din octetii dublucuvintelor din sirul D sortati in ordine descrescatoare in interpretarea fara semn.
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B908000000                      mov ecx, len
    22 00000005 E33D                            jecxz final
    23                                          
    24 00000007 FC                              cld
    25 00000008 BE[00000000]                    mov esi, s
    26 0000000D BF[08000000]                    mov edi, d 
    27                                          
    28 00000012 A4<rept>                        times len movsb
    29                                          
    30                                          ; sortare descrescatoare
    31                                          
    32 0000001A 49                              dec ecx
    33                                          do:
    34 0000001B 89CB                                mov ebx, ecx
    35 0000001D BE00000000                          mov esi, 0
    36                                              do2:
    37 00000022 8A86[08000000]                          mov al, [d + esi]
    38 00000028 8A96[09000000]                          mov dl, [d + esi + 1]
    39                                                  
    40 0000002E 38D0                                    cmp al, dl
    41 00000030 770C                                    ja no_swap
    42                                                  
    43 00000032 8896[08000000]                          mov [d + esi], dl
    44 00000038 8886[09000000]                          mov [d + esi + 1], al
    45                                                  
    46                                                  no_swap:
    47                                                  
    48 0000003E 46                                      inc esi
    49 0000003F 4B                                      dec ebx
    50 00000040 75E0                                    jnz do2
    51 00000042 E2D7                            loop do
    52                                                  
    53                                          
    54                                          final:
    55                                          ; exit(0)
    56 00000044 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    57 00000046 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
