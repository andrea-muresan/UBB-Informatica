     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, fread, fopen, fclose
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll    
    10                                  import fread msvcrt.dll    
    11                                  import fopen msvcrt.dll    
    12                                  import fclose msvcrt.dll    
    13                                  segment data use32 class=data
    14 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0
    14 00000009 7400               
    15 0000000B 7200                        mod_acces db "r", 0
    16 0000000D FFFFFFFF                    descriptor dd -1
    17                                      
    18 00000011 00                          buffer db 0
    19                                      
    20 00000012 00                          nr_vocale_citite db 0
    21 00000013 4145494F556165696F-         vocale db "AEIOUaeiou", 0
    21 0000001C 7500               
    22                                      
    23 0000001E 256420766F63616C65-         format_afis db "%d vocale", 0
    23 00000027 00                 
    24                                      
    25 00000028 446573636869646572-         eroare db "Deschiderea fisierului a esuat", 0
    25 00000031 656120666973696572-
    25 0000003A 756C75692061206573-
    25 00000043 75617400           
    26                                  
    27                                  ; 1. Se da un fisier text. Sa se citeasca continutul fisierului, sa se contorizeze numarul de vocale si sa se afiseze aceasta valoare. Numele fisierului text este definit in segmentul de date.
    28                                  segment code use32 class=code
    29                                      start:
    30 00000000 BB00000000                      mov ebx, 0 ; stocam numarul vocalelor citite
    31                                          
    32                                          ; EAX = fopen(nume_fisier, mod_acces)
    33 00000005 68[0B000000]                    push dword mod_acces
    34 0000000A 68[00000000]                    push dword nume_fisier
    35 0000000F FF15[00000000]                  call [fopen]
    36 00000015 83C408                          add esp, 4*2
    37                                          
    38                                          ; verificam daca fisierul a fost deschis cu succes
    39 00000018 83F800                          cmp eax, 0
    40 0000001B 745C                            je eroare_deschidere
    41                                          
    42 0000001D A3[0D000000]                    mov [descriptor], eax
    43                                          
    44                                          repeta:
    45                                              ; fread(buffer, int size, len, descriptor)
    46 00000022 FF35[0D000000]                      push dword [descriptor]
    47 00000028 6A01                                push dword 1
    48 0000002A 6A01                                push dword 1
    49 0000002C 68[11000000]                        push dword buffer
    50 00000031 FF15[00000000]                      call [fread]
    51 00000037 83C410                              add esp, 4*4
    52                                              
    53 0000003A 83F800                              cmp eax, 0
    54 0000003D 741A                                je afisare
    55                                              
    56 0000003F FC                                  cld
    57 00000040 A0[11000000]                        mov al, [buffer]
    58 00000045 BF[13000000]                        mov edi, vocale
    59 0000004A B90A000000                          mov ecx, 10
    60                                              
    61                                              cauta:
    62 0000004F AE                                      scasb
    63 00000050 7404                                    je gasit
    64 00000052 E2FB                                loop cauta
    65                                              
    66 00000054 EB01                                jmp gata
    67                                              
    68                                              gasit:
    69 00000056 43                                      inc ebx
    70                                              gata:
    71                                              
    72 00000057 EBC9                                jmp repeta
    73                                          
    74                                          
    75                                          afisare:
    76 00000059 53                                  push dword ebx
    77 0000005A 68[1E000000]                        push dword format_afis
    78 0000005F FF15[00000000]                      call [printf]
    79 00000065 83C408                              add esp, 4*2
    80                                          
    81                                          
    82                                          ; fclose(descriptor)
    83 00000068 FF35[0D000000]                  push dword [descriptor]
    84 0000006E FF15[00000000]                  call [fclose]
    85 00000074 83C404                          add esp, 4*1
    86                                          
    87                                          
    88 00000077 EB0E                            jmp final
    89                                          eroare_deschidere:
    90 00000079 68[28000000]                        push dword eroare
    91 0000007E FF15[00000000]                      call [printf]
    92 00000084 83C404                              add esp, 4*1
    93                                      
    94                                          final:
    95                                          ; exit(0)
    96 00000087 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    97 00000089 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
