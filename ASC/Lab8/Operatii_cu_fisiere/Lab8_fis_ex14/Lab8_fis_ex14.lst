     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, fclose, fprintf, printf
     6                                  import exit msvcrt.dll    
     7                                  import fopen msvcrt.dll    
     8                                  import fclose msvcrt.dll    
     9                                  import fprintf msvcrt.dll    
    10                                  import printf msvcrt.dll    
    11                                  
    12                                  segment data use32 class=data
    13 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0
    13 00000009 7400               
    14 0000000B 7700                        mod_acces db "w", 0
    15 0000000D FFFFFFFF                    descriptor dd -1
    16                                      
    17 00000011 416E61207369204D61-         text db "Ana si Maria merG in Andorra.", 0
    17 0000001A 726961206D65724720-
    17 00000023 696E20416E646F7272-
    17 0000002C 612E00             
    18                                      len equ $ - text - 1
    19                                      
    20                                      dif equ 'a' - 'A'
    21                                      
    22 0000002F 256300                      format_afis db "%c", 0
    23                                      
    24 00000032 446573636869646572-         eroare db "Deschiderea fisierului a esuat", 0
    24 0000003B 656120666973696572-
    24 00000044 756C75692061206573-
    24 0000004D 75617400           
    25                                      
    26                                  
    27                                  ; 14. Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, litere mari, cifre si caractere speciale. Sa se transforme toate literele mari din textul dat in litere mici. Sa
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; fopen(nume_fisier, mod_acces)
    31 00000000 68[0B000000]                    push dword mod_acces
    32 00000005 68[00000000]                    push dword nume_fisier
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4*2
    35                                          
    36 00000013 83F800                          cmp eax, 0
    37 00000016 744A                            je eroare_deschidere
    38                                          
    39 00000018 A3[0D000000]                    mov [descriptor], eax
    40                                          
    41 0000001D FC                              cld
    42 0000001E BE[11000000]                    mov esi, text
    43 00000023 B91D000000                      mov ecx, len
    44                                          repeta:
    45 00000028 51                                  push ecx 
    46                                              
    47 00000029 B800000000                          mov eax, 0
    48 0000002E AC                                  lodsb
    49 0000002F 3C41                                cmp al, 'A'
    50 00000031 7C06                                jl afis
    51                                              
    52 00000033 3C5A                                cmp al, 'Z'
    53 00000035 7F02                                jg afis
    54                                              
    55 00000037 0420                                add al, dif
    56                                  
    57                                              afis:
    58                                                  ; fprintf(descriptor, format_afis, eax)
    59 00000039 50                                      push eax
    60 0000003A 68[2F000000]                            push dword format_afis
    61 0000003F FF35[0D000000]                          push dword [descriptor]
    62 00000045 FF15[00000000]                          call [fprintf]
    63 0000004B 83C40C                                  add esp, 4*3
    64                                                  
    65 0000004E 59                                  pop ecx
    66 0000004F E2D7                                loop repeta
    67                                                  
    68                                          
    69                                          ; fclose(descriptor)
    70 00000051 FF35[0D000000]                  push dword [descriptor]
    71 00000057 FF15[00000000]                  call [fclose]
    72 0000005D 83C404                          add esp, 4
    73                                          
    74 00000060 EB0E                            jmp final
    75                                          eroare_deschidere:
    76 00000062 68[32000000]                        push dword eroare
    77 00000067 FF15[00000000]                      call [printf] 
    78 0000006D 83C404                              add esp, 4
    79                                              
    80                                          final:
    81                                          ; exit(0)
    82 00000070 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    83 00000072 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
