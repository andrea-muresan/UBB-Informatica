     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, printf, fscanf, scanf, getchar
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  import fscanf msvcrt.dll
    14                                  import getchar msvcrt.dll
    15                                  
    16                                  segment data use32 class=data
    17 00000000 00<rept>                    nume_fisier times 15 db 0
    18 0000000F 7200                        mod_acces db "r", 0
    19 00000011 FFFFFFFF                    descriptor dd -1
    20                                      
    21 00000015 00<rept>                    cuvant times 20 db 0
    22                                      
    23 00000029 257300                      format_cit db "%s", 0
    24 0000002C 25732000                    format_afis db "%s ", 0
    25                                      
    26 00000030 446573636869646572-         eroare db "Deschiderea fisierului a esuat", 0
    26 00000039 656120666973696572-
    26 00000042 756C75692061206573-
    26 0000004B 75617400           
    27                                  
    28                                  
    29                                  segment code use32 class=code
    30                                      start:
    31                                          ; scanf(format_cit, nume_fisier)
    32 00000000 68[00000000]                    push dword nume_fisier
    33 00000005 68[2C000000]                    push dword format_afis
    34 0000000A FF15[00000000]                  call [fscanf]
    35 00000010 83C408                          add esp, 4*2
    36                                          
    37                                          ; fopen(nume_fisier, mod_acces)
    38 00000013 68[00000000]                    push dword nume_fisier
    39 00000018 68[0F000000]                    push dword mod_acces
    40 0000001D FF15[00000000]                  call [fopen]
    41 00000023 83C408                          add esp, 4*2
    42                                          
    43 00000026 83F800                          cmp eax, 0
    44 00000029 7416                            je eroare_deschidere
    45                                          
    46 0000002B A3[11000000]                    mov [descriptor], eax
    47                                          
    48                                          ; fclose(descriptor)
    49 00000030 FF35[11000000]                  push dword [descriptor]
    50 00000036 FF15[00000000]                  call [fclose]
    51 0000003C 83C404                          add esp, 4
    52                                          
    53 0000003F EB0E                            jmp final
    54                                          eroare_deschidere:
    55 00000041 68[30000000]                        push dword eroare
    56 00000046 FF15[00000000]                      call [printf]
    57 0000004C 83C404                              add esp, 4
    58                                          final:
    59                                          ; exit(0)
    60 0000004F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    61 00000051 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
