     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 785634124D3C2B1A76-         s dd 12345678h, 1A2B3C4Dh, 0FE98DC76h
    13 00000009 DC98FE             
    14                                      len equ ($-s)/4
    15 0000000C 00<rept>                    b1 times len db 0
    16 0000000F 00<rept>                    b2 times len db 0
    17                                  
    18                                  ; Se da un sir A de dublucuvinte. Cunstruiti doua siruri de octeti  
    19                                  ; - B1: contine ca elemente partea inferioara a cuvintelor inferioara din A
    20                                  ; - B2: contine ca elemente partea superioara a cuvintelor superioare din A
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 B903000000                      mov ecx, len
    24 00000005 E31C                            jecxz final
    25                                      
    26 00000007 BE[00000000]                    mov esi, s
    27 0000000C BF[0C000000]                    mov edi, b1
    28 00000011 BB00000000                      mov ebx, 0 ; contor pentru b2
    29                                          
    30                                          repeta:
    31 00000016 A4                                  movsb ; partea inferioara a cuvintelor inferioara
    32                                              
    33 00000017 AC<rept>                            times 3 lodsb ; partea superioara a cuvintelor superioare
    34 0000001A 8883[0F000000]                      mov [b2 + ebx], al 
    35 00000020 43                                  inc ebx
    36                                              
    37 00000021 E2F3                            loop repeta
    38                                      
    39                                          final:
    40                                          ; exit(0)
    41 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
