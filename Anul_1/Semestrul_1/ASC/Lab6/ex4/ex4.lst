     1                                  ; 4. Se da un sir de octeti s. Sa se construiasca sirul de octeti d, care contine pe fiecare pozitie numarul de biti 1 ai octetului de pe pozitia corespunzatoare din s.
     2                                  
     3                                  
     4                                  bits 32 ; assembling for the 32 bits architecture
     5                                  
     6                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     7                                  global start        
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 0519377F                    s db 5, 25, 55, 127
    17                                      len equ $-s
    18 00000004 00<rept>                    d times len db 0
    19 00000008 02                          doi db 2
    20                                  
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 B904000000                      mov ecx, len
    25 00000005 67E326                          jcxz final
    26                                          
    27 00000008 BE[00000000]                    mov esi, s
    28 0000000D BF[04000000]                    mov edi, d
    29                                          
    30                                          
    31                                          repeta:
    32 00000012 FC                                  cld
    33 00000013 AC                                  lodsb ; al = ds:esi, inc esi
    34                                              
    35 00000014 B300                                mov bl, 0 ; contorizam cati de 1 apar in scrierea binara a numarului
    36                                              bucla:
    37 00000016 B400                                    mov ah, 0 ;ax <- cuvant
    38 00000018 F635[08000000]                          div byte [doi]
    39                                                  
    40 0000001E 80FC00                                  cmp ah, 0
    41 00000021 7402                                    je nada
    42                                                  
    43 00000023 FEC3                                    inc bl
    44                                                  
    45                                                  nada:
    46                                                  
    47 00000025 3C00                                    cmp al, 0
    48 00000027 75ED                                    jne bucla
    49                                              
    50 00000029 88D8                                mov al, bl
    51 0000002B AA                                  stosb
    52                                                       
    53 0000002C E2E4                            loop repeta
    54                                          
    55                                          final:
    56                                          ; exit(0)
    57 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
