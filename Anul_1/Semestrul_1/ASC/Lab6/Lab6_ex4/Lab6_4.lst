     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0519377F                    s db 5, 25, 55, 127
    14                                      len equ $-s
    15 00000004 00<rept>                    d times len db 0
    16                                  
    17                                  ; Se da un sir de octeti s. Sa se construiasca sirul de octeti d, care contine pe fiecare pozitie numarul de biti 1 ai octetului de pe pozitia corespunzatoare din s.
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B904000000                      mov ecx, len
    21 00000005 E32B                            jecxz final
    22                                          
    23 00000007 FC                              cld
    24 00000008 BE[00000000]                    mov esi, s
    25 0000000D BF[04000000]                    mov edi, d
    26                                          
    27                                          repeta:
    28 00000012 B300                                mov bl, 0 ; contorizam biti de 1
    29 00000014 66B80000                            mov ax, 0
    30 00000018 AC                                  lodsb
    31                                              bucla:
    32 00000019 66A90100                                test ax, 01h
    33 0000001D 7402                                    jz nu_e_unu
    34 0000001F FEC3                                    inc bl
    35                                  
    36                                                  nu_e_unu:
    37                                                  
    38 00000021 B202                                    mov dl, 2
    39 00000023 F6F2                                    div dl
    40 00000025 B400                                    mov ah, 0
    41                                                  
    42 00000027 6683F800                                cmp ax, 0
    43 0000002B 75EC                                    jne bucla
    44                                                  
    45 0000002D 88D8                               mov al, bl
    46 0000002F AA                                 stosb
    47                                              
    48 00000030 E2E0                            loop repeta
    49                                          
    50                                          
    51                                          final:
    52                                          ; exit(0)
    53 00000032 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 00000034 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
