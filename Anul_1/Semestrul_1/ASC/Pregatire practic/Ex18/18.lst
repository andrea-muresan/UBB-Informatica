     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, printf, fread
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0
    15 00000009 00                 
    16 0000000A 7200                        mod_acces db "r", 0
    17 0000000C FFFFFFFF                    descriptor dd -1
    18                                      
    19                                      len equ 100
    20 00000010 00<rept>                    string times len db 0
    21 00000074 256300                      format_afis db "%c", 0
    22 00000077 00000000                    lungime dd 0
    23                                      
    24 0000007B 446573686964657265-         eroare db "Deshiderea fisierului a esuat", 0
    24 00000084 612066697369657275-
    24 0000008D 6C7569206120657375-
    24 00000096 617400             
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; fopen(nume_fisier, mod_acces)
    30 00000000 68[0A000000]                    push dword mod_acces
    31 00000005 68[00000000]                    push dword nume_fisier
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4*2
    34                                          
    35 00000013 83F800                          cmp eax, 0
    36 00000016 745C                            je eroare_deschidere
    37                                          
    38 00000018 A3[0C000000]                    mov [descriptor], eax
    39                                          
    40                                          ; fread(string, 1, len, descriptor)
    41 0000001D FF35[0C000000]                  push dword [descriptor]
    42 00000023 6A64                            push dword len
    43 00000025 6A01                            push dword 1
    44 00000027 68[10000000]                    push dword string
    45 0000002C FF15[00000000]                  call [fread]
    46 00000032 83C410                          add esp, 4*4
    47                                          
    48 00000035 83F800                          cmp eax, 0
    49 00000038 7448                            je final
    50                                          
    51 0000003A A3[77000000]                    mov [lungime], eax
    52                                          
    53 0000003F 8B0D[77000000]                  mov ecx, [lungime]
    54                                          repeta:
    55 00000045 51                                  push ecx
    56                                              
    57 00000046 B800000000                          mov eax, 0
    58 0000004B 8A81[0F000000]                      mov al, byte [string + ecx - 1]
    59                                              
    60                                              ; printf(format_afis, eax)
    61 00000051 50                                  push dword eax
    62 00000052 68[74000000]                        push dword format_afis
    63 00000057 FF15[00000000]                      call [printf]
    64 0000005D 83C408                              add esp, 4*2
    65                                              
    66 00000060 59                                  pop ecx
    67 00000061 E2E2                            loop repeta
    68                                          
    69                                          ; fclose(descriptor)
    70 00000063 FF35[0C000000]                  push dword [descriptor]
    71 00000069 FF15[00000000]                  call [fclose]
    72 0000006F 83C404                          add esp, 4
    73                                          
    74 00000072 EB0E                            jmp final
    75                                          eroare_deschidere:
    76 00000074 68[7B000000]                        push dword eroare
    77 00000079 FF15[00000000]                      call [printf]
    78 0000007F 83C404                              add esp, 4
    79                                          final:
    80                                          ; exit(0)
    81 00000082 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    82 00000084 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
