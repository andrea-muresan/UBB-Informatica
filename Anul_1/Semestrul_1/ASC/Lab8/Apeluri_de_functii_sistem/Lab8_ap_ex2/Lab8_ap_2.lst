     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll    
    10                                  import scanf msvcrt.dll    
    11                                  
    12                                  
    13                                  segment data use32 class=data
    14 00000000 00000000                    a dd 0
    15 00000004 00000000                    b dd 0
    16 00000008 00000000                    rezultat dd 0
    17                                      
    18 0000000C 61203D2000                  mesaja db "a = ", 0
    19 00000011 62203D2000                  mesajb db "b = ", 0
    20 00000016 256400                      format db "%d", 0
    21                                  
    22                                  ; 2. Sa se citeasca de la tastatura doua numere a si b (in baza 10) si sa se calculeze a/b. Catul impartirii se va salva in memorie in variabila "rezultat" (definita in segmentul de date). Valorile se considera cu s
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[0C000000]                    push dword mesaja
    26 00000005 FF15[00000000]                  call [printf]
    27 0000000B 83C404                          add esp, 4*1
    28                                          
    29                                          ; scanf % a
    30 0000000E 68[00000000]                    push dword a
    31 00000013 68[16000000]                    push dword format
    32 00000018 FF15[00000000]                  call [scanf]
    33 0000001E 83C408                          add esp, 4*2
    34                                          
    35 00000021 68[11000000]                    push dword mesajb
    36 00000026 FF15[00000000]                  call [printf]
    37 0000002C 83C404                          add esp, 4*1
    38                                          
    39                                          ; scanf % b
    40 0000002F 68[04000000]                    push dword b
    41 00000034 68[16000000]                    push dword format
    42 00000039 FF15[00000000]                  call [scanf]
    43 0000003F 83C408                          add esp, 4*2
    44                                          
    45 00000042 BA00000000                      mov edx, 0
    46 00000047 A1[00000000]                    mov eax, [a]
    47 0000004C 8B1D[04000000]                  mov ebx, [b]
    48                                          
    49 00000052 F7F3                            div ebx
    50 00000054 A3[08000000]                    mov [rezultat], eax
    51                                      
    52                                          ; exit(0)
    53 00000059 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 0000005B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
