     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf              
     8                                  import exit msvcrt.dll    
     9                                  import scanf msvcrt.dll    
    10                                  import printf msvcrt.dll    
    11                                  
    12                                  ; 3. Se dau doua numere naturale a si b (a, b: dword, definite in segmentul de date). Sa se calculeze suma lor si sa se afiseze in urmatorul format: "<a> + <b> = <result>"
    13                                  ; Exemplu: "1 + 2 = 3"
    14                                  ; Valorile vor fi afisate in format decimal (baza 10) cu semn.
    15                                  segment data use32 class=data
    16 00000000 00000000                    a dd 0
    17 00000004 00000000                    b dd 0
    18                                      
    19 00000008 61203D2000                  mesaja db "a = ", 0
    20 0000000D 62203D2000                  mesajb db "b = ", 0
    21 00000012 2564202B202564203D-         format_suma db "%d + %d = %d", 0
    21 0000001B 20256400           
    22 0000001F 256400                      format db "%d", 0
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; a
    28 00000000 68[08000000]                    push dword mesaja
    29 00000005 FF15[00000000]                  call [printf]
    30 0000000B 83C404                          add esp, 4*1
    31                                          
    32 0000000E 68[00000000]                    push dword a
    33 00000013 68[1F000000]                    push dword format
    34 00000018 FF15[00000000]                  call [scanf]
    35 0000001E 83C408                          add esp, 4*2
    36                                          
    37                                          ; b
    38 00000021 68[0D000000]                    push dword mesajb
    39 00000026 FF15[00000000]                  call [printf]
    40 0000002C 83C404                          add esp, 4*1
    41                                          
    42 0000002F 68[04000000]                    push dword b
    43 00000034 68[1F000000]                    push dword format
    44 00000039 FF15[00000000]                  call [scanf]
    45 0000003F 83C408                          add esp, 4*2
    46                                          
    47                                          ; suma
    48 00000042 A1[00000000]                    mov eax, [a]
    49 00000047 0305[04000000]                  add eax, [b]
    50                                          
    51 0000004D 50                              push dword eax
    52 0000004E FF35[04000000]                  push dword [b]
    53 00000054 FF35[00000000]                  push dword [a]
    54 0000005A 68[12000000]                    push dword format_suma
    55 0000005F FF15[00000000]                  call [printf]
    56 00000065 83C410                          add esp, 4*4
    57                                      
    58                                          ; exit(0)
    59 00000068 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    60 0000006A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
