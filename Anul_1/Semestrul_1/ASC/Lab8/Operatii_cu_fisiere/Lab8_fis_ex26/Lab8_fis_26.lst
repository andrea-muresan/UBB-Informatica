     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, fclose, scanf, fprintf, printf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                  segment data use32 class=data
    14 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0
    14 00000009 7400               
    15 0000000B 7700                        mod_acces db "w", 0
    16 0000000D FFFFFFFF                    descriptor dd -1
    17                                      
    18 00000011 00<rept>                    dolar times 50 db 0
    19 00000043 00<rept>                    n times 50 db 0
    20                                      
    21 00000075 257300                      format_cit db "%s", 0
    22 00000078 25732000                    format_afis db "%s ", 0
    23                                      
    24 0000007C 444573636869646572-         eroare db "DEschiderea fisierului a esuat", 0
    24 00000085 656120666973696572-
    24 0000008E 756C75692061206573-
    24 00000097 75617400           
    25                                      
    26                                  
    27                                  ; Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se citeasca de la tastatura cuvinte pana cand se citeste de la tastatura caracterul '$'. Sa se scrie in fisier 
    28                                  segment code use32 class=code
    29                                      start:
    30 00000000 B024                            mov al, '$'
    31 00000002 A2[11000000]                    mov [dolar], al
    32                                          
    33                                          ; fopen(nume_fisier, mod_acces)
    34 00000007 68[0B000000]                    push dword mod_acces
    35 0000000C 68[00000000]                    push dword nume_fisier
    36 00000011 FF15[00000000]                  call [fopen]
    37 00000017 83C408                          add esp, 4*2
    38                                          
    39 0000001A 83F800                          cmp eax, 0
    40 0000001D 0F8484000000                    je eroare_deschidere
    41                                          
    42 00000023 A3[0D000000]                    mov [descriptor], eax
    43                                          
    44                                          repeta:
    45                                              ; scanf(format_cit, n)
    46 00000028 68[43000000]                        push dword n
    47 0000002D 68[75000000]                        push dword format_cit
    48 00000032 FF15[00000000]                      call [scanf]
    49 00000038 83C408                              add esp, 4*2
    50                                              
    51                                              ; verificam daca caracterul citit e '$'
    52 0000003B FC                                  cld
    53 0000003C BE[43000000]                        mov esi, n
    54 00000041 BF[11000000]                        mov edi, dolar
    55 00000046 B932000000                          mov ecx, 50
    56 0000004B F3A6                                repe cmpsb
    57 0000004D E347                                jecxz afara
    58                                          
    59                                              ; verificare litera mare
    60 0000004F BE[43000000]                        mov esi, n
    61 00000054 B932000000                          mov ecx , 50
    62                                              bucla:
    63 00000059 AC                                      lodsb
    64 0000005A 3C41                                    cmp al, 'A'
    65 0000005C 7C1F                                    jl not_uppercase
    66                                                  
    67 0000005E 3C5A                                    cmp al, 'Z'
    68 00000060 7F1B                                    jg not_uppercase
    69                                                  
    70                                                  ; fprintf(descriptor, format_afis, n)
    71 00000062 68[43000000]                            push dword n
    72 00000067 68[78000000]                            push dword format_afis
    73 0000006C FF35[0D000000]                          push dword [descriptor]
    74 00000072 FF15[00000000]                          call [fprintf]
    75 00000078 83C40C                                  add esp, 4*3
    76 0000007B EB02                                    jmp next
    77                                                  
    78                                                  not_uppercase:
    79                                                  
    80 0000007D E2DA                                    loop bucla
    81                                                  
    82                                              next:
    83                                                  
    84                                              ; clear n
    85 0000007F BE[43000000]                        mov esi, n
    86 00000084 BF[43000000]                        mov edi, n
    87 00000089 B932000000                          mov ecx, 50
    88                                              ciclu:
    89 0000008E AC                                      lodsb
    90 0000008F 30C0                                    xor al, al
    91 00000091 AA                                      stosb
    92 00000092 E2FA                                loop ciclu    
    93                                              
    94 00000094 EB92                                jmp repeta
    95                                              
    96                                          afara:
    97                                          
    98                                          ; fclose(descriptor)
    99 00000096 FF35[0D000000]                  push dword [descriptor]
   100 0000009C FF15[00000000]                  call [fclose]
   101 000000A2 83C404                          add esp, 4
   102                                          
   103 000000A5 EB0E                            jmp final
   104                                          eroare_deschidere:
   105 000000A7 68[7C000000]                        push dword eroare
   106 000000AC FF15[00000000]                      call [printf]
   107 000000B2 83C404                              add esp, 4
   108                                              
   109                                          final:
   110                                          ; exit(0)
   111 000000B5 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   112 000000B7 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
