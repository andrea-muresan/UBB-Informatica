     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fprintf, printf
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll    
    10                                  import fclose msvcrt.dll    
    11                                  import fprintf msvcrt.dll    
    12                                  import printf msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 6669736965722E7478-         nume_fisier db "fisier.txt", 0
    15 00000009 7400               
    16 0000000B 7700                        mod_acces db "w", 0
    17 0000000D FFFFFFFF                    descriptor dd -1
    18                                      
    19 00000011 4D616D612061726520-         text db "Mama are 5 mere. Merg la mare.", 0
    19 0000001A 35206D6572652E204D-
    19 00000023 657267206C61206D61-
    19 0000002C 72652E00           
    20                                      len equ $ - text - 1
    21                                      
    22 00000030 256300                      format_afis db "%c", 0
    23                                      
    24 00000033 446573636869646572-         eroare db "Deschiderea fisierului a esuat", 0
    24 0000003C 656120666973696572-
    24 00000045 756C75692061206573-
    24 0000004E 75617400           
    25                                  
    26                                  ; 25. Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, litere mari, cifre si caractere speciale. Sa se inlocuiasca toate spatiile din textul dat cu caracterul 'S'. Sa 
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; fopen(nume_fisier, mod_acces)
    30 00000000 68[0B000000]                    push dword mod_acces
    31 00000005 68[00000000]                    push dword nume_fisier
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4*2
    34                                          
    35 00000013 83F800                          cmp eax, 0
    36 00000016 7446                            je eroare_deschidere
    37                                          
    38 00000018 A3[0D000000]                    mov [descriptor], eax
    39                                          
    40 0000001D FC                              cld
    41 0000001E BE[11000000]                    mov esi, text
    42 00000023 B91E000000                      mov ecx, len
    43                                          repeta:
    44 00000028 51                                  push ecx
    45                                              
    46 00000029 B800000000                          mov eax, 0
    47 0000002E AC                                  lodsb
    48                                              
    49 0000002F 3C20                                cmp al, ' '
    50 00000031 7502                                jne afisare
    51                                              
    52 00000033 B053                                mov al, 'S'
    53                                              
    54                                              afisare:
    55                                                  ; fprintf(descriptor, format_afis, eax)
    56 00000035 50                                      push eax
    57 00000036 68[30000000]                            push dword format_afis
    58 0000003B FF35[0D000000]                          push dword [descriptor]
    59 00000041 FF15[00000000]                          call [fprintf]
    60 00000047 83C40C                                  add esp, 4*3
    61                                              
    62 0000004A 59                                  pop ecx
    63 0000004B E2DB                            loop repeta
    64                                              
    65                                          
    66                                          ; fclose(descriptor)
    67 0000004D FF35[0D000000]                  push dword [descriptor]
    68 00000053 FF15[00000000]                  call [fclose]
    69 00000059 83C404                          add esp, 4
    70                                          
    71 0000005C EB0E                            jmp final
    72                                          eroare_deschidere:
    73 0000005E 68[33000000]                        push dword eroare
    74 00000063 FF15[00000000]                      call [printf]
    75 00000069 83C404                              add esp, 4
    76                                              
    77                                          final:
    78                                          ; exit(0)
    79 0000006C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    80 0000006E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
