     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  segment data use32 class=data
    12 00000000 010204060A1419              s db 1, 2, 4, 6, 10, 20, 25
    13                                      len equ $-s
    14 00000007 00<rept>                    d times len-1 db 0
    15                                  
    16                                  ; Se da un sir de octeti S de lungime l. Sa se construiasca sirul D de lungime l-1 astfel incat elementele din D sa reprezinte diferenta dintre fiecare 2 elemente consecutive din S.
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 B907000000                      mov ecx, len
    20 00000005 49                              dec ecx
    21 00000006 E31A                            jecxz final
    22                                          
    23 00000008 BE00000000                      mov esi, 0
    24                                          repeta:
    25 0000000D 8A86[01000000]                      mov al, [s + esi + 1]
    26 00000013 2A86[00000000]                      sub al, [s + esi]
    27 00000019 8886[07000000]                      mov [d + esi], al
    28                                              
    29 0000001F 46                                  inc esi
    30                                          
    31 00000020 E2EB                            loop repeta
    32                                    
    33                                          
    34                                          final:
    35                                          ; exit(0)
    36 00000022 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000024 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
