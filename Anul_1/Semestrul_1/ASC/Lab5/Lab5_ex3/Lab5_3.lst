     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     6                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     7                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
     8                                  
     9                                  segment data use32 class=data
    10 00000000 01020304                    s1 db 1, 2, 3, 4
    11                                      ls1 equ $-s1
    12 00000004 050607                      s2 db 5, 6, 7
    13                                      ls2 equ $-s2
    14                                      
    15                                      len equ $-s1
    16 00000007 00<rept>                    d times len db 0
    17                                      
    18                                  ; Se dau doua siruri de octeti S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor din sirul S1 1uate de la stanga spre dreapta si a elementelor din sirul S2 luate de la dreapta spre stanga.
    19                                  segment code use32 class=code
    20                                      start:
    21                                          
    22 00000000 BE00000000                      mov esi, 0
    23                                          
    24 00000005 BF00000000                      mov edi, 0
    25 0000000A B904000000                      mov ecx, ls1
    26                                          repeta:
    27 0000000F 8A87[00000000]                      mov al, [s1+edi]
    28 00000015 8886[07000000]                      mov [d+esi], al
    29 0000001B 46                                  inc esi
    30 0000001C 47                                  inc edi
    31 0000001D E2F0                            loop repeta
    32                                              
    33 0000001F BF00000000                      mov edi, 0
    34 00000024 B903000000                      mov ecx, ls2
    35                                          bucla:
    36 00000029 8A87[04000000]                      mov al, [s2+edi]
    37 0000002F 8886[07000000]                      mov [d+esi], al
    38 00000035 46                                  inc esi
    39 00000036 47                                  inc edi
    40 00000037 E2F0                            loop bucla
    41                                          
    42                                      
    43                                          ; exit(0)
    44 00000039 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 0000003B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
