     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  
    12                                  segment data use32 class=data
    13 00000000 0102030405060708            s db 1, 2, 3, 4, 5, 6, 7, 8
    14                                      len equ $-s 
    15 00000008 00<rept>                    d times len db 0
    16                                  
    17                                  ; Se da un sir de octeti S. Sa se construiasca sirul D astfel: sa se puna mai intai elementele de pe pozitiile pare din S iar apoi elementele de pe pozitiile impare din S.
    18                                  segment code use32 class=code
    19                                      start:
    20                                          
    21 00000000 B908000000                      mov ecx, len
    22 00000005 83F903                          cmp ecx, 3
    23 00000008 7C38                            jl final
    24                                          
    25 0000000A 49                              dec ecx
    26                                          
    27 0000000B BF00000000                      mov edi, 0 ; contorul sirului pe care il cream
    28                                          
    29 00000010 BE00000000                      mov esi, 0 ; contorul cu care parcurgem sirul dat - poz pare
    30                                          repeta:
    31 00000015 8A86[00000000]                      mov al, [s + esi]
    32 0000001B 8887[08000000]                      mov [d + edi], al
    33 00000021 47                                  inc edi
    34                                              
    35 00000022 83C602                              add esi, 2
    36 00000025 39CE                                cmp esi, ecx
    37 00000027 7EEC                                jle repeta
    38                                              
    39 00000029 BE01000000                      mov esi, 1 ; contorul cu care parcurgem sirul dat - poz impare
    40                                          bucla:
    41 0000002E 8A86[00000000]                      mov al, [s + esi]
    42 00000034 8887[08000000]                      mov [d + edi], al
    43 0000003A 47                                  inc edi
    44                                              
    45 0000003B 83C602                              add esi, 2
    46 0000003E 39CE                                cmp esi, ecx
    47 00000040 7EEC                                jle bucla
    48                                          
    49                                          final:
    50                                          ; exit(0)
    51 00000042 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 00000044 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
