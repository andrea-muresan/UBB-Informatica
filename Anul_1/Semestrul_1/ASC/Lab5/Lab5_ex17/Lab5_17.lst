     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 010306020307                s1 db 1, 3, 6, 2, 3, 7
    14                                      len equ $-s1
    15 00000006 060308010205                s2 db 6, 3, 8, 1, 2, 5
    16 0000000C 00<rept>                    d times len db 0
    17                                  
    18                                  ; Se dau 2 siruri de octeti S1 si S2 de aceeasi lungime. Sa se construiasca sirul D astfel incat fiecare element din D sa reprezinte maximul dintre elementele de pe pozitiile corespunzatoare din S1 si S2.
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B906000000                      mov ecx, len
    22 00000005 E326                            jecxz final
    23                                          
    24 00000007 BE00000000                      mov esi, 0
    25                                          repeta:
    26 0000000C 8A86[00000000]                      mov al, [s1 + esi]
    27 00000012 8A9E[06000000]                      mov bl, [s2 + esi]
    28 00000018 38D8                                cmp al, bl
    29 0000001A 7C08                                jl bl_mai_mare
    30                                              
    31                                              al_mai_mare:
    32 0000001C 8886[0C000000]                          mov [d + esi], al
    33 00000022 EB06                                    jmp gata
    34                                              bl_mai_mare:
    35 00000024 889E[0C000000]                          mov [d + esi], bl
    36                                              gata:
    37 0000002A 46                                      inc esi
    38 0000002B E2DF                                loop repeta
    39                                              
    40                                          
    41                                          final:
    42                                          ; exit(0)
    43 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
