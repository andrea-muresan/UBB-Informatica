     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  segment data use32 class=data
    12 00000000 2B32326238365838            s1 db '+', '2', '2', 'b', '8', '6', 'X', '8'
    13                                      l_s1 equ $ - s1
    14 00000008 613435                      s2 db 'a', '4', '5'
    15                                      l_s2 equ $ - s2
    16                                      
    17                                      len equ (l_s1 + 1)/2 + l_s2
    18 0000000B 00<rept>                    d times len db 0
    19                                  
    20                                  ; Se dau doua siruri de caractere S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor sirului S2 in ordine inversa cu elementele de pe pozitiile pare din sirul S1.
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 B907000000                      mov ecx, len
    24 00000005 E33F                            jecxz final
    25                                          
    26 00000007 BF00000000                      mov edi, 0 ; contor pentru sirul destinatie
    27                                          
    28                                          ;sirul 2
    29 0000000C B903000000                      mov ecx, l_s2
    30 00000011 E30F                            jecxz next
    31                                          
    32                                          repeta:
    33 00000013 8A81[07000000]                      mov al, [s2 + ecx - 1]
    34 00000019 8887[0B000000]                      mov [d + edi], al
    35 0000001F 47                                  inc edi
    36 00000020 E2F1                            loop repeta
    37                                          
    38                                          next: ; sirul 1
    39 00000022 B908000000                      mov ecx, l_s1
    40 00000027 83F902                          cmp ecx, 2
    41 0000002A 7C1A                            jl final
    42                                          
    43 0000002C 49                              dec ecx
    44                                          
    45 0000002D BE01000000                      mov esi, 1
    46                                          repeta2:
    47 00000032 8A86[00000000]                      mov al, [s1 + esi]
    48 00000038 8887[0B000000]                      mov [d + edi], al
    49 0000003E 47                                  inc edi
    50                                              
    51 0000003F 83C602                              add esi, 2
    52 00000042 39CE                                cmp esi, ecx
    53 00000044 7EEC                                jle repeta2
    54                                              
    55                                      
    56                                          final:
    57                                          ; exit(0)
    58 00000046 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    59 00000048 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
