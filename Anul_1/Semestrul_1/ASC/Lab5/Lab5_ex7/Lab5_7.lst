     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  
    12                                  segment data use32 class=data
    13 00000000 01030507                    s1 db 1, 3, 5, 7
    14                                      len_s equ $-s1
    15 00000004 02060904                    s2 db 2, 6, 9, 4
    16                                      
    17                                      len equ $-s2
    18 00000008 00<rept>                    d times len db 0
    19                                  
    20                                  ; Se dau doua siruri de octeti S1 si S2 de aceeasi lungime. Sa se obtina sirul D prin intercalarea elementelor celor doua siruri.
    21                                  segment code use32 class=code
    22                                      start:
    23                                          
    24 00000000 B904000000                      mov ecx, len_s
    25 00000005 E327                            jecxz final
    26                                          
    27 00000007 BE00000000                      mov esi, 0 ; contor pentru sirurile date
    28 0000000C BF00000000                      mov edi, 0 ; contorul pentru sirul pe care il cream
    29                                          
    30                                          repeta:
    31                                              ; punem elementul din primul sir
    32 00000011 8A86[00000000]                      mov al, [s1 + esi]
    33 00000017 8887[08000000]                      mov [d + edi], al
    34 0000001D 47                                  inc edi
    35                                              
    36                                              ; punem eementul din al doilea sir
    37 0000001E 8A86[04000000]                      mov al, [s2 + esi]
    38 00000024 8887[08000000]                      mov [d + edi], al
    39 0000002A 47                                  inc edi
    40                                          
    41 0000002B 46                                  inc esi
    42                                              
    43 0000002C E2E3                            loop repeta
    44                                      
    45                                          final:
    46                                          ; exit(0)
    47 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
